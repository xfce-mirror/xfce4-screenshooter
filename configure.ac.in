dnl configure.ac
dnl
dnl xfce4-screenshooter
dnl

m4_define([xfce4_screenshooter_version_major], [1])
m4_define([xfce4_screenshooter_version_minor], [9])
m4_define([xfce4_screenshooter_version_micro], [7])
m4_define([xfce4_screenshooter_version_nano],  []) dnl leave this empty to have no nano version
m4_define([xfce4_screenshooter_version_build], [@REVISION@])
m4_define([xfce4_screenshooter_version_tag], [])
m4_define([xfce4_screenshooter_version], [xfce4_screenshooter_version_major().xfce4_screenshooter_version_minor().xfce4_screenshooter_version_micro()ifelse(xfce4_screenshooter_version_nano(), [], [], [.xfce4_screenshooter_version_nano()])ifelse(xfce4_screenshooter_version_tag(), [git], [xfce4_screenshooter_version_tag()-xfce4_screenshooter_version_build()], [xfce4_screenshooter_version_tag()])])

AC_INIT([xfce4-screenshooter], [xfce4_screenshooter_version], [https://bugzilla.xfce.org/], [xfce4-screenshooter])
AC_CONFIG_MACRO_DIRS([m4])
dnl ***************************
dnl *** Initialize automake ***
dnl ***************************
AM_INIT_AUTOMAKE([1.8 dist-bzip2 tar-ustar foreign])
AC_CONFIG_HEADERS([config.h])
AM_MAINTAINER_MODE()
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

dnl ********************************
dnl *** Check for basic programs ***
dnl ********************************
AC_PROG_CC()
AC_PROG_CC_C_O()
AC_PROG_LD()
AC_PROG_INSTALL()
IT_PROG_INTLTOOL([0.35.0])
AM_PROG_CC_C_O()

dnl **************************
dnl *** Initialize libtool ***
dnl **************************
LT_PREREQ([2.2.6])
LT_INIT([disable-static])

dnl **********************************
dnl *** Check for standard headers ***
dnl **********************************
AC_HEADER_STDC

dnl ***********************************
dnl *** Check for required packages ***
dnl ***********************************
XDT_CHECK_PACKAGE([LIBXFCE4PANEL], [libxfce4panel-2.0], [4.12.0])
XDT_CHECK_PACKAGE([LIBXFCE4UTIL], [libxfce4util-1.0], [4.12.0])
XDT_CHECK_PACKAGE([LIBXFCE4UI], [libxfce4ui-2], [4.12.0])
XDT_CHECK_PACKAGE([GTHREAD], [gthread-2.0], [2.42.0])
XDT_CHECK_PACKAGE([GTK], [gtk+-3.0], [3.22.0])
XDT_CHECK_PACKAGE([GDK], [gdk-3.0], [3.22.0])
XDT_CHECK_PACKAGE([GDKX11], [gdk-x11-3.0], [3.22.0])
XDT_CHECK_PACKAGE([GLIB], [glib-2.0], [2.42.0])
XDT_CHECK_PACKAGE([SOUP], [libsoup-2.4], [2.26.0])
XDT_CHECK_PACKAGE([LIBXML], [libxml-2.0], [2.4.0])
XDT_CHECK_PACKAGE([EXO], [exo-2], [0.12.0])
XDT_CHECK_PACKAGE([LIBXEXT], [xext], [1.0.0])
XDT_CHECK_OPTIONAL_PACKAGE([XFIXES], [xfixes], [4.0.0], [xfixes], [XFIXES extension support])
XDT_CHECK_LIBX11()

dnl ******************************
dnl *** Check for i18n support ***
dnl ******************************
XDT_I18N([@LINGUAS@])

dnl **************************
dnl *** Check for help2man ***
dnl **************************
AC_CHECK_PROGS([HELP2MAN], [help2man])
if ! test -z "$HELP2MAN"; then
AM_CONDITIONAL([HAVE_HELP2MAN], true)
else
AM_CONDITIONAL([HAVE_HELP2MAN], false)
fi

dnl Check for debugging support
XDT_FEATURE_DEBUG()

AC_OUTPUT([
Makefile
po/Makefile.in
])

dnl ***************************
dnl *** Print configuration ***
dnl ***************************

echo ""
echo "Build Configuration:"
echo ""

echo "  * XFIXES support:                $XFIXES_FOUND"
echo "  * Debugging support:             $enable_debug"

echo ""
